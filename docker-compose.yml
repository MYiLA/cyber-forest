version: '3.9'

services:
  client:
    container_name: client
    image: cyberforest-client
    networks:
      - cyb-net
      - server-net
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    ports:
      - '${CLIENT_PORT}:${CLIENT_PORT}'
    env_file:
      - .env
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - SERVER_PORT=${SERVER_PORT}
    command: yarn start:client
    depends_on:
      - server

  server:
    container_name: server
    image: cyberforest-server
    networks:
      - cyb-net
      - server-net
      - pg-net
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    env_file:
      - .env
    environment:
      SERVER_PORT: ${SERVER_PORT}
    command: yarn run start:server
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    networks:
      - cyb-net
      - server-net
      - pg-net
    restart: always
    ports:
      - '${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}'
    env_file:
      - .env
    environment:
      PG_DATA: /var/lib/postgresql/data/
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    networks:
      - cyb-net
      - pg-net
    restart: always
    ports:
      - '${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}'
    env_file:
      - .env
    environment:
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 0
    volumes:
      - ./tmp/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

networks:
  cyb-net:
    driver: bridge
  pg-net:
    driver: bridge
  server-net:
    driver: bridge
